package org.llistaCompra.activity;

import org.llistaCompra.R;
import org.llistaCompra.adapter.LlistaCompraDbAdapter;

import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.ContextMenu;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView.AdapterContextMenuInfo;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;

public class LlistaCompraList extends ListActivity {
	
	public static final int ADDLIST_ID = Menu.FIRST;
	
	public static final int PRODUCTLIST_ID = 0;
	
	public static final int CREATELIST_ID = 1;

	public static final int EDITLIST_ID = 2;
	public static final int DELETELIST_ID = 3;

	
	
	private LlistaCompraDbAdapter llistaCompraDbAdapter;
	
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.llista_compra_llista_list);
        llistaCompraDbAdapter = new LlistaCompraDbAdapter(this);
        llistaCompraDbAdapter.open();
        fillData();
        registerForContextMenu(getListView());
    }
    
    
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
    	switch (item.getItemId()) {
        case ADDLIST_ID:
            createList();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
    	boolean result = super.onCreateOptionsMenu(menu);
        menu.add(0, ADDLIST_ID, 0, R.string.insert_list);
        return result;
    }
    
    @Override
    protected void onListItemClick(ListView l, View v, int position, long id) {
    	 super.onListItemClick(l, v, position, id);
         Intent i = new Intent(this, LlistaCompraProductList.class);
         i.putExtra(LlistaCompraDbAdapter.LLISTA_ROWID, id);
         startActivityForResult(i, PRODUCTLIST_ID);
    }
    
    private void fillData() {
        // Get all of the notes from the database and create the item list
        Cursor c = llistaCompraDbAdapter.fetchAllLlista();
        startManagingCursor(c);

        String[] from = new String[] { LlistaCompraDbAdapter.LLISTA_NOM };
        int[] to = new int[] { R.id.text1 };
        
        // Now create an array adapter and set it to display using our row
        SimpleCursorAdapter llistaCompra =
            new SimpleCursorAdapter(this, R.layout.llista_compra_llista_row, c, from, to);
        setListAdapter(llistaCompra);
    }
    
    
    @Override
    public void onCreateContextMenu(ContextMenu menu, View v,
            ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
        menu.add(0, EDITLIST_ID, 0, R.string.edit_list);
        menu.add(0, DELETELIST_ID, 1, R.string.delete_list);
        menu.add(0, PRODUCTLIST_ID, 2, R.string.product_list);
    }

    @Override
    public boolean onContextItemSelected(MenuItem item) {
    	AdapterContextMenuInfo info;
    	Intent i;
    	switch(item.getItemId()) {
            case DELETELIST_ID:
                info = (AdapterContextMenuInfo) item.getMenuInfo();
                
                //TODO afegir confirmació
                new AlertDialog.Builder(this)
                .setTitle("Delete entry")
                .setMessage("Are you sure you want to delete this entry?")
                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                    
                	public void onClick(DialogInterface dialog, int which) { 
                    	//llistaCompraDbAdapter.deleteLlista(info.id);
                    	
                    }
                 })
                .setNegativeButton("No", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) { 
                        // do nothing
                    }
                 })
                 .show();

                llistaCompraDbAdapter.deleteLlista(info.id);
                fillData();
                return true;
            case EDITLIST_ID:
            	i = new Intent(this, LlistaCompraEdit.class);
            	info = (AdapterContextMenuInfo) item.getMenuInfo();
            	i.putExtra(LlistaCompraDbAdapter.LLISTA_ROWID, info.id);
                startActivityForResult(i, EDITLIST_ID);
                return true;
            case PRODUCTLIST_ID:
            	i = new Intent(this, LlistaCompraProductList.class);
            	info = (AdapterContextMenuInfo) item.getMenuInfo();
            	i.putExtra(LlistaCompraDbAdapter.LLISTA_ROWID, info.id);
                startActivityForResult(i, PRODUCTLIST_ID);
                return true;
        }
        return super.onContextItemSelected(item);
    }
    
    private void createList() {
        Intent i = new Intent(this, LlistaCompraEdit.class);
        startActivityForResult(i, CREATELIST_ID);
    }
    
    
    
}